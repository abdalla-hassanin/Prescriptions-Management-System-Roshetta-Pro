// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoshettaProAPI.Infrustructure.Context;

#nullable disable

namespace RoshettaProAPI.Infrustructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Clinic", b =>
                {
                    b.Property<int>("ClinicID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClinicID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ClinicID");

                    b.ToTable("Clinics");

                    b.HasData(
                        new
                        {
                            ClinicID = 1,
                            Address = "123 Cairo St, Cairo, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7317),
                            Email = "cairo.medical@example.com",
                            Name = "Cairo Medical Center",
                            PhoneNumber = "+2021234567",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7349)
                        },
                        new
                        {
                            ClinicID = 2,
                            Address = "456 Giza Rd, Giza, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7359),
                            Email = "giza.health@example.com",
                            Name = "Giza Health Clinic",
                            PhoneNumber = "+2027654321",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7363)
                        },
                        new
                        {
                            ClinicID = 3,
                            Address = "789 Alexandria Ave, Alexandria, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7370),
                            Email = "alex.family@example.com",
                            Name = "Alexandria Family Clinic",
                            PhoneNumber = "+2034567890",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7374)
                        },
                        new
                        {
                            ClinicID = 4,
                            Address = "101 Mansoura Blvd, Mansoura, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7380),
                            Email = "mansoura.general@example.com",
                            Name = "Mansoura General Hospital",
                            PhoneNumber = "+2051234567",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7384)
                        },
                        new
                        {
                            ClinicID = 5,
                            Address = "202 Asyut Rd, Asyut, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7390),
                            Email = "asyut.specialist@example.com",
                            Name = "Asyut Specialist Clinic",
                            PhoneNumber = "+2081234567",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7394)
                        },
                        new
                        {
                            ClinicID = 6,
                            Address = "303 Suez St, Suez, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7400),
                            Email = "suez.healthcare@example.com",
                            Name = "Suez Healthcare",
                            PhoneNumber = "+2067654321",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7404)
                        },
                        new
                        {
                            ClinicID = 7,
                            Address = "404 Fayoum Rd, Fayoum, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7410),
                            Email = "fayoum.health@example.com",
                            Name = "Fayoum Health Center",
                            PhoneNumber = "+2076543210",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7414)
                        },
                        new
                        {
                            ClinicID = 8,
                            Address = "505 Luxor St, Luxor, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7420),
                            Email = "luxor.medical@example.com",
                            Name = "Luxor Medical Clinic",
                            PhoneNumber = "+2091234567",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7424)
                        },
                        new
                        {
                            ClinicID = 9,
                            Address = "606 Aswan Ave, Aswan, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7430),
                            Email = "aswan.care@example.com",
                            Name = "Aswan Care Clinic",
                            PhoneNumber = "+2097654321",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7434)
                        },
                        new
                        {
                            ClinicID = 10,
                            Address = "707 Hurghada Blvd, Hurghada, Egypt",
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7440),
                            Email = "hurghada.wellness@example.com",
                            Name = "Hurghada Wellness Center",
                            PhoneNumber = "+2098765432",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(7444)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Contact", b =>
                {
                    b.Property<int>("ContactID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            ContactID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2616),
                            Email = "ahmed.ali@example.com",
                            Name = "Ahmed Ali",
                            PhoneNumber = "+201000000001",
                            Relationship = "Brother",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2656)
                        },
                        new
                        {
                            ContactID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2665),
                            Email = "sara.ahmed@example.com",
                            Name = "Sara Ahmed",
                            PhoneNumber = "+201000000002",
                            Relationship = "Sister",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2669)
                        },
                        new
                        {
                            ContactID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2676),
                            Email = "hassan.youssef@example.com",
                            Name = "Hassan Youssef",
                            PhoneNumber = "+201000000003",
                            Relationship = "Father",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2680)
                        },
                        new
                        {
                            ContactID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2686),
                            Email = "mona.khaled@example.com",
                            Name = "Mona Khaled",
                            PhoneNumber = "+201000000004",
                            Relationship = "Mother",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2690)
                        },
                        new
                        {
                            ContactID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2696),
                            Email = "omar.ibrahim@example.com",
                            Name = "Omar Ibrahim",
                            PhoneNumber = "+201000000005",
                            Relationship = "Friend",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2700)
                        },
                        new
                        {
                            ContactID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2706),
                            Email = "layla.nabil@example.com",
                            Name = "Layla Nabil",
                            PhoneNumber = "+201000000006",
                            Relationship = "Cousin",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2710)
                        },
                        new
                        {
                            ContactID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2716),
                            Email = "ali.maher@example.com",
                            Name = "Ali Maher",
                            PhoneNumber = "+201000000007",
                            Relationship = "Uncle",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2720)
                        },
                        new
                        {
                            ContactID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2726),
                            Email = "noha.saad@example.com",
                            Name = "Noha Saad",
                            PhoneNumber = "+201000000008",
                            Relationship = "Aunt",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2730)
                        },
                        new
                        {
                            ContactID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2735),
                            Email = "youssef.omar@example.com",
                            Name = "Youssef Omar",
                            PhoneNumber = "+201000000009",
                            Relationship = "Nephew",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2740)
                        },
                        new
                        {
                            ContactID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2745),
                            Email = "dina.yasser@example.com",
                            Name = "Dina Yasser",
                            PhoneNumber = "+201000000010",
                            Relationship = "Niece",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 565, DateTimeKind.Local).AddTicks(2749)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Doctor", b =>
                {
                    b.Property<int>("DoctorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoctorID"));

                    b.Property<int>("ClinicID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("DoctorID");

                    b.HasIndex("ClinicID");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            DoctorID = 1,
                            ClinicID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6575),
                            Email = "mohamed.hassan@example.com",
                            FirstName = "Mohamed",
                            LastName = "Hassan",
                            PhoneNumber = "+201200000001",
                            Specialization = 1,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6612)
                        },
                        new
                        {
                            DoctorID = 2,
                            ClinicID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6623),
                            Email = "alaa.salem@example.com",
                            FirstName = "Alaa",
                            LastName = "Salem",
                            PhoneNumber = "+201200000002",
                            Specialization = 2,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6627)
                        },
                        new
                        {
                            DoctorID = 3,
                            ClinicID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6634),
                            Email = "samir.youssef@example.com",
                            FirstName = "Samir",
                            LastName = "Youssef",
                            PhoneNumber = "+201200000003",
                            Specialization = 3,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6638)
                        },
                        new
                        {
                            DoctorID = 4,
                            ClinicID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6644),
                            Email = "hassan.ibrahim@example.com",
                            FirstName = "Hassan",
                            LastName = "Ibrahim",
                            PhoneNumber = "+201200000004",
                            Specialization = 4,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6648)
                        },
                        new
                        {
                            DoctorID = 5,
                            ClinicID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6655),
                            Email = "mona.nabil@example.com",
                            FirstName = "Mona",
                            LastName = "Nabil",
                            PhoneNumber = "+201200000005",
                            Specialization = 5,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6659)
                        },
                        new
                        {
                            DoctorID = 6,
                            ClinicID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6665),
                            Email = "ahmed.mahmoud@example.com",
                            FirstName = "Ahmed",
                            LastName = "Mahmoud",
                            PhoneNumber = "+201200000006",
                            Specialization = 6,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6669)
                        },
                        new
                        {
                            DoctorID = 7,
                            ClinicID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6676),
                            Email = "layla.omar@example.com",
                            FirstName = "Layla",
                            LastName = "Omar",
                            PhoneNumber = "+201200000007",
                            Specialization = 7,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6680)
                        },
                        new
                        {
                            DoctorID = 8,
                            ClinicID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6686),
                            Email = "youssef.hassan@example.com",
                            FirstName = "Youssef",
                            LastName = "Hassan",
                            PhoneNumber = "+201200000008",
                            Specialization = 8,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6690)
                        },
                        new
                        {
                            DoctorID = 9,
                            ClinicID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6697),
                            Email = "nada.ali@example.com",
                            FirstName = "Nada",
                            LastName = "Ali",
                            PhoneNumber = "+201200000009",
                            Specialization = 9,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6701)
                        },
                        new
                        {
                            DoctorID = 10,
                            ClinicID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6708),
                            Email = "hany.maged@example.com",
                            FirstName = "Hany",
                            LastName = "Maged",
                            PhoneNumber = "+201200000010",
                            Specialization = 10,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 566, DateTimeKind.Local).AddTicks(6711)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.MedicalHistory", b =>
                {
                    b.Property<int>("MedicalHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicalHistoryID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Diagnosis")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MedicalHistoryID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.ToTable("MedicalHistories");

                    b.HasData(
                        new
                        {
                            MedicalHistoryID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9815),
                            Diagnosis = "Hypertension",
                            DoctorID = 1,
                            Notes = "Regular check-up",
                            PatientID = 1,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9854),
                            VisitDate = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9864),
                            Diagnosis = "Diabetes",
                            DoctorID = 2,
                            Notes = "Diet recommended",
                            PatientID = 2,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9869),
                            VisitDate = new DateTime(2023, 2, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9876),
                            Diagnosis = "Asthma",
                            DoctorID = 3,
                            Notes = "Inhaler prescribed",
                            PatientID = 3,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9880),
                            VisitDate = new DateTime(2023, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9887),
                            Diagnosis = "Migraine",
                            DoctorID = 4,
                            Notes = "Painkillers prescribed",
                            PatientID = 4,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9891),
                            VisitDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9897),
                            Diagnosis = "Back Pain",
                            DoctorID = 5,
                            Notes = "Physiotherapy advised",
                            PatientID = 5,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9901),
                            VisitDate = new DateTime(2023, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9908),
                            Diagnosis = "Allergy",
                            DoctorID = 6,
                            Notes = "Antihistamines prescribed",
                            PatientID = 6,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9912),
                            VisitDate = new DateTime(2023, 6, 6, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9919),
                            Diagnosis = "High Cholesterol",
                            DoctorID = 7,
                            Notes = "Diet change advised",
                            PatientID = 7,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9922),
                            VisitDate = new DateTime(2023, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9930),
                            Diagnosis = "Anemia",
                            DoctorID = 8,
                            Notes = "Iron supplements prescribed",
                            PatientID = 8,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9934),
                            VisitDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9941),
                            Diagnosis = "Flu",
                            DoctorID = 9,
                            Notes = "Rest and fluids advised",
                            PatientID = 9,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9945),
                            VisitDate = new DateTime(2023, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            MedicalHistoryID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9951),
                            Diagnosis = "Arthritis",
                            DoctorID = 10,
                            Notes = "Pain management plan created",
                            PatientID = 10,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 570, DateTimeKind.Local).AddTicks(9955),
                            VisitDate = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Medication", b =>
                {
                    b.Property<int>("MedicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MedicationID"));

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MedicationForm")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("MedicationID");

                    b.ToTable("Medications");

                    b.HasData(
                        new
                        {
                            MedicationID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6823),
                            Description = "Used for pain relief and fever reduction",
                            MedicationForm = 1,
                            Name = "Panadol",
                            SideEffects = "Nausea, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6860)
                        },
                        new
                        {
                            MedicationID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6870),
                            Description = "Anti-inflammatory and blood thinner",
                            MedicationForm = 1,
                            Name = "Aspirin",
                            SideEffects = "Gastrointestinal discomfort, Bleeding",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6874)
                        },
                        new
                        {
                            MedicationID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6880),
                            Description = "Antibiotic for bacterial infections",
                            MedicationForm = 2,
                            Name = "Amoxicillin",
                            SideEffects = "Diarrhea, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6884)
                        },
                        new
                        {
                            MedicationID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6890),
                            Description = "Pain relief and fever reduction for children",
                            MedicationForm = 3,
                            Name = "Paracetamol Syrup",
                            SideEffects = "Liver damage in high doses",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(6894)
                        },
                        new
                        {
                            MedicationID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7093),
                            Description = "Topical treatment for skin inflammation",
                            MedicationForm = 4,
                            Name = "Hydrocortisone Cream",
                            SideEffects = "Skin thinning, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7098)
                        },
                        new
                        {
                            MedicationID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7106),
                            Description = "Used for blood sugar control in diabetes",
                            MedicationForm = 5,
                            Name = "Insulin Injection",
                            SideEffects = "Hypoglycemia, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7110)
                        },
                        new
                        {
                            MedicationID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7116),
                            Description = "Prevents nausea and vomiting",
                            MedicationForm = 6,
                            Name = "Ondansetron Suppository",
                            SideEffects = "Headache, Fatigue",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7120)
                        },
                        new
                        {
                            MedicationID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7125),
                            Description = "Opioid pain medication for severe pain",
                            MedicationForm = 7,
                            Name = "Fentanyl Patch",
                            SideEffects = "Drowsiness, Addiction",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7129)
                        },
                        new
                        {
                            MedicationID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7135),
                            Description = "Nonsteroidal anti-inflammatory drug (NSAID)",
                            MedicationForm = 8,
                            Name = "Ibuprofen Liquid",
                            SideEffects = "Gastrointestinal discomfort, Kidney damage",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7139)
                        },
                        new
                        {
                            MedicationID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7145),
                            Description = "Fiber supplement for digestive health",
                            MedicationForm = 9,
                            Name = "Metamucil Powder",
                            SideEffects = "Bloating, Gas",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7149)
                        },
                        new
                        {
                            MedicationID = 11,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7155),
                            Description = "Topical NSAID for pain and inflammation",
                            MedicationForm = 10,
                            Name = "Diclofenac Gel",
                            SideEffects = "Skin irritation, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7159)
                        },
                        new
                        {
                            MedicationID = 12,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7165),
                            Description = "Sore throat relief",
                            MedicationForm = 2,
                            Name = "Throat Lozenges",
                            SideEffects = "Mouth irritation, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7169)
                        },
                        new
                        {
                            MedicationID = 13,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7174),
                            Description = "Bronchodilator for asthma",
                            MedicationForm = 1,
                            Name = "Albuterol Inhaler",
                            SideEffects = "Tremors, Increased heart rate",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7178)
                        },
                        new
                        {
                            MedicationID = 14,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7184),
                            Description = "Opioid pain relief for severe pain",
                            MedicationForm = 5,
                            Name = "Morphine Injection",
                            SideEffects = "Drowsiness, Addiction",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7188)
                        },
                        new
                        {
                            MedicationID = 15,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7197),
                            Description = "Pain relief and fever reducer",
                            MedicationForm = 1,
                            Name = "Tylenol Tablet",
                            SideEffects = "Liver damage in high doses",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7201)
                        },
                        new
                        {
                            MedicationID = 16,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7206),
                            Description = "Antifungal for skin infections",
                            MedicationForm = 4,
                            Name = "Miconazole Cream",
                            SideEffects = "Skin irritation, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7210)
                        },
                        new
                        {
                            MedicationID = 17,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7216),
                            Description = "Antibiotic for bacterial infections",
                            MedicationForm = 1,
                            Name = "Penicillin Tablet",
                            SideEffects = "Diarrhea, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7220)
                        },
                        new
                        {
                            MedicationID = 18,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7226),
                            Description = "Cough suppressant",
                            MedicationForm = 3,
                            Name = "Dextromethorphan Syrup",
                            SideEffects = "Drowsiness, Dizziness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7230)
                        },
                        new
                        {
                            MedicationID = 19,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7236),
                            Description = "Corticosteroid for inflammation",
                            MedicationForm = 8,
                            Name = "Prednisolone Oral Liquid",
                            SideEffects = "Increased appetite, Mood changes",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7240)
                        },
                        new
                        {
                            MedicationID = 20,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7245),
                            Description = "Blood thinner to prevent clots",
                            MedicationForm = 1,
                            Name = "Warfarin Tablet",
                            SideEffects = "Bleeding, Bruising",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7249)
                        },
                        new
                        {
                            MedicationID = 21,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7255),
                            Description = "Relieves heartburn and indigestion",
                            MedicationForm = 8,
                            Name = "Gaviscon Liquid",
                            SideEffects = "Nausea, Constipation",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7259)
                        },
                        new
                        {
                            MedicationID = 22,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7265),
                            Description = "Antibiotic for serious bacterial infections",
                            MedicationForm = 2,
                            Name = "Clindamycin Capsule",
                            SideEffects = "Diarrhea, Allergic reactions",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7269)
                        },
                        new
                        {
                            MedicationID = 23,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7274),
                            Description = "NSAID for pain and inflammation",
                            MedicationForm = 1,
                            Name = "Naproxen Tablet",
                            SideEffects = "Gastrointestinal discomfort, Dizziness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7278)
                        },
                        new
                        {
                            MedicationID = 24,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7284),
                            Description = "Antihistamine for allergy relief",
                            MedicationForm = 1,
                            Name = "Loratadine Tablet",
                            SideEffects = "Dry mouth, Drowsiness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7288)
                        },
                        new
                        {
                            MedicationID = 25,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7294),
                            Description = "Topical antibiotic for skin infections",
                            MedicationForm = 4,
                            Name = "Mupirocin Ointment",
                            SideEffects = "Skin irritation, Burning",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7298)
                        },
                        new
                        {
                            MedicationID = 26,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7304),
                            Description = "Antihistamine for allergy relief",
                            MedicationForm = 3,
                            Name = "Cetirizine Syrup",
                            SideEffects = "Drowsiness, Dry mouth",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7308)
                        },
                        new
                        {
                            MedicationID = 27,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7314),
                            Description = "Beta-blocker for blood pressure and anxiety",
                            MedicationForm = 1,
                            Name = "Propranolol Tablet",
                            SideEffects = "Dizziness, Fatigue",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7318)
                        },
                        new
                        {
                            MedicationID = 28,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7324),
                            Description = "Proton pump inhibitor for acid reflux",
                            MedicationForm = 2,
                            Name = "Omeprazole Capsule",
                            SideEffects = "Headache, Diarrhea",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7328)
                        },
                        new
                        {
                            MedicationID = 29,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7333),
                            Description = "Antibiotic for bacterial infections",
                            MedicationForm = 1,
                            Name = "Doxycycline Tablet",
                            SideEffects = "Photosensitivity, Nausea",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7337)
                        },
                        new
                        {
                            MedicationID = 30,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7343),
                            Description = "H2 blocker for acid reflux",
                            MedicationForm = 1,
                            Name = "Ranitidine Tablet",
                            SideEffects = "Headache, Constipation",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7348)
                        },
                        new
                        {
                            MedicationID = 31,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7354),
                            Description = "Antibiotic for urinary tract infections",
                            MedicationForm = 1,
                            Name = "Trimethoprim Tablet",
                            SideEffects = "Nausea, Rash",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7358)
                        },
                        new
                        {
                            MedicationID = 32,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7364),
                            Description = "Antibiotic for anaerobic infections",
                            MedicationForm = 1,
                            Name = "Metronidazole Tablet",
                            SideEffects = "Nausea, Metallic taste",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7368)
                        },
                        new
                        {
                            MedicationID = 33,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7373),
                            Description = "Topical retinoid for acne",
                            MedicationForm = 1,
                            Name = "Tretinoin Cream",
                            SideEffects = "Skin irritation, Redness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7377)
                        },
                        new
                        {
                            MedicationID = 34,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7383),
                            Description = "Antifungal shampoo for dandruff",
                            MedicationForm = 11,
                            Name = "Ketoconazole Shampoo",
                            SideEffects = "Skin irritation, Dryness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7387)
                        },
                        new
                        {
                            MedicationID = 35,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7393),
                            Description = "Antifungal for serious infections",
                            MedicationForm = 5,
                            Name = "Amphotericin B Injection",
                            SideEffects = "Fever, Chills",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7397)
                        },
                        new
                        {
                            MedicationID = 36,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7402),
                            Description = "Hormone replacement for hypothyroidism",
                            MedicationForm = 1,
                            Name = "Levothyroxine Tablet",
                            SideEffects = "Palpitations, Weight loss",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7406)
                        },
                        new
                        {
                            MedicationID = 37,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7412),
                            Description = "Antiviral for cold sores",
                            MedicationForm = 5,
                            Name = "Acyclovir Cream",
                            SideEffects = "Skin irritation, Dryness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7416)
                        },
                        new
                        {
                            MedicationID = 38,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7423),
                            Description = "Diuretic for fluid retention",
                            MedicationForm = 1,
                            Name = "Furosemide Tablet",
                            SideEffects = "Dehydration, Electrolyte imbalance",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7426)
                        },
                        new
                        {
                            MedicationID = 39,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7432),
                            Description = "Antibiotic for bacterial infections",
                            MedicationForm = 1,
                            Name = "Azithromycin Tablet",
                            SideEffects = "Nausea, Diarrhea",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7436)
                        },
                        new
                        {
                            MedicationID = 40,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7442),
                            Description = "Antibiotic for bacterial infections",
                            MedicationForm = 1,
                            Name = "Ciprofloxacin Tablet",
                            SideEffects = "Nausea, Dizziness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7446)
                        },
                        new
                        {
                            MedicationID = 41,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7451),
                            Description = "Antifungal for yeast infections",
                            MedicationForm = 2,
                            Name = "Fluconazole Capsule",
                            SideEffects = "Nausea, Headache",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7455)
                        },
                        new
                        {
                            MedicationID = 42,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7462),
                            Description = "SNRI for depression and anxiety",
                            MedicationForm = 2,
                            Name = "Duloxetine Capsule",
                            SideEffects = "Nausea, Dry mouth",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7465)
                        },
                        new
                        {
                            MedicationID = 43,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7474),
                            Description = "Proton pump inhibitor for acid reflux",
                            MedicationForm = 2,
                            Name = "Lansoprazole Capsule",
                            SideEffects = "Headache, Diarrhea",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7477)
                        },
                        new
                        {
                            MedicationID = 44,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7483),
                            Description = "SSRI for depression and anxiety",
                            MedicationForm = 1,
                            Name = "Paroxetine Tablet",
                            SideEffects = "Nausea, Drowsiness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7487)
                        },
                        new
                        {
                            MedicationID = 45,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7495),
                            Description = "Used for nerve pain and seizures",
                            MedicationForm = 2,
                            Name = "Gabapentin Capsule",
                            SideEffects = "Dizziness, Fatigue",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7499)
                        },
                        new
                        {
                            MedicationID = 46,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7507),
                            Description = "SNRI for depression and anxiety",
                            MedicationForm = 2,
                            Name = "Venlafaxine Capsule",
                            SideEffects = "Nausea, Dry mouth",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7510)
                        },
                        new
                        {
                            MedicationID = 47,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7516),
                            Description = "Sleep aid for insomnia",
                            MedicationForm = 1,
                            Name = "Melatonin Tablet",
                            SideEffects = "Drowsiness, Headache",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7520)
                        },
                        new
                        {
                            MedicationID = 48,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7525),
                            Description = "Sedative for short-term insomnia",
                            MedicationForm = 1,
                            Name = "Zolpidem Tablet",
                            SideEffects = "Drowsiness, Dizziness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7529)
                        },
                        new
                        {
                            MedicationID = 49,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7535),
                            Description = "Statin for cholesterol reduction",
                            MedicationForm = 1,
                            Name = "Simvastatin Tablet",
                            SideEffects = "Muscle pain, Digestive issues",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7539)
                        },
                        new
                        {
                            MedicationID = 50,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7547),
                            Description = "ACE inhibitor for blood pressure",
                            MedicationForm = 1,
                            Name = "Lisinopril Tablet",
                            SideEffects = "Cough, Dizziness",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(7551)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Patient", b =>
                {
                    b.Property<int>("PatientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("BloodType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("EmergencyContactID")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("PatientID");

                    b.HasIndex("EmergencyContactID");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientID = 1,
                            Address = "123 Cairo Street, Cairo",
                            BloodType = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7115),
                            DateOfBirth = new DateTime(1985, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "youssef.ahmed@example.com",
                            EmergencyContactID = 1,
                            FirstName = "Youssef",
                            Gender = 1,
                            LastName = "Ahmed",
                            PhoneNumber = "+201300000001",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7199)
                        },
                        new
                        {
                            PatientID = 2,
                            Address = "456 Giza Road, Giza",
                            BloodType = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7213),
                            DateOfBirth = new DateTime(1990, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "amina.fathy@example.com",
                            EmergencyContactID = 2,
                            FirstName = "Amina",
                            Gender = 2,
                            LastName = "Fathy",
                            PhoneNumber = "+201300000002",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7217)
                        },
                        new
                        {
                            PatientID = 3,
                            Address = "789 Alexandria Avenue, Alexandria",
                            BloodType = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7226),
                            DateOfBirth = new DateTime(1988, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "omar.nabil@example.com",
                            EmergencyContactID = 3,
                            FirstName = "Omar",
                            Gender = 1,
                            LastName = "Nabil",
                            PhoneNumber = "+201300000003",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7230)
                        },
                        new
                        {
                            PatientID = 4,
                            Address = "101 Mansoura Lane, Mansoura",
                            BloodType = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7241),
                            DateOfBirth = new DateTime(1985, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hassan.mahmoud@example.com",
                            EmergencyContactID = 4,
                            FirstName = "Hassan",
                            Gender = 1,
                            LastName = "Mahmoud",
                            PhoneNumber = "+201300000004",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7245)
                        },
                        new
                        {
                            PatientID = 5,
                            Address = "202 Asyut Street, Asyut",
                            BloodType = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7254),
                            DateOfBirth = new DateTime(1992, 1, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "layla.omar@example.com",
                            EmergencyContactID = 5,
                            FirstName = "Layla",
                            Gender = 2,
                            LastName = "Omar",
                            PhoneNumber = "+201300000005",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7258)
                        },
                        new
                        {
                            PatientID = 6,
                            Address = "303 Suez Road, Suez",
                            BloodType = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7266),
                            DateOfBirth = new DateTime(1995, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ahmed.maher@example.com",
                            EmergencyContactID = 6,
                            FirstName = "Ahmed",
                            Gender = 1,
                            LastName = "Maher",
                            PhoneNumber = "+201300000006",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7270)
                        },
                        new
                        {
                            PatientID = 7,
                            Address = "404 Fayoum Street, Fayoum",
                            BloodType = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7279),
                            DateOfBirth = new DateTime(1987, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nada.ali@example.com",
                            EmergencyContactID = 7,
                            FirstName = "Nada",
                            Gender = 2,
                            LastName = "Ali",
                            PhoneNumber = "+201300000007",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7283)
                        },
                        new
                        {
                            PatientID = 8,
                            Address = "505 Luxor Avenue, Luxor",
                            BloodType = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7292),
                            DateOfBirth = new DateTime(1989, 2, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mona.yasser@example.com",
                            EmergencyContactID = 8,
                            FirstName = "Mona",
                            Gender = 2,
                            LastName = "Yasser",
                            PhoneNumber = "+201300000008",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7296)
                        },
                        new
                        {
                            PatientID = 9,
                            Address = "606 Aswan Road, Aswan",
                            BloodType = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7435),
                            DateOfBirth = new DateTime(1983, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "hany.ibrahim@example.com",
                            EmergencyContactID = 9,
                            FirstName = "Hany",
                            Gender = 1,
                            LastName = "Ibrahim",
                            PhoneNumber = "+201300000009",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7440)
                        },
                        new
                        {
                            PatientID = 10,
                            Address = "707 Hurghada Street, Hurghada",
                            BloodType = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7449),
                            DateOfBirth = new DateTime(1991, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "dina.hassan@example.com",
                            EmergencyContactID = 10,
                            FirstName = "Dina",
                            Gender = 2,
                            LastName = "Hassan",
                            PhoneNumber = "+201300000010",
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 564, DateTimeKind.Local).AddTicks(7453)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.PatientXray", b =>
                {
                    b.Property<int>("XrayID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("XrayID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateTaken")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<string>("LabName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("XrayImageURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("XrayType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("XrayID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.ToTable("PatientXrays");

                    b.HasData(
                        new
                        {
                            XrayID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3000),
                            DateTaken = new DateTime(2024, 8, 20, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(2958),
                            DoctorID = 1,
                            LabName = "Cairo Lab",
                            Notes = "Possible pneumonia",
                            PatientID = 1,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3005),
                            XrayImageURL = "http://example.com/xray1.png",
                            XrayType = "Chest"
                        },
                        new
                        {
                            XrayID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3019),
                            DateTaken = new DateTime(2024, 8, 21, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3013),
                            DoctorID = 2,
                            LabName = "Alexandria Lab",
                            Notes = "Spinal alignment check",
                            PatientID = 2,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3023),
                            XrayImageURL = "http://example.com/xray2.png",
                            XrayType = "Spine"
                        },
                        new
                        {
                            XrayID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3034),
                            DateTaken = new DateTime(2024, 8, 22, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3028),
                            DoctorID = 3,
                            LabName = "Giza Lab",
                            Notes = "ACL injury",
                            PatientID = 3,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3038),
                            XrayImageURL = "http://example.com/xray3.png",
                            XrayType = "Knee"
                        },
                        new
                        {
                            XrayID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3048),
                            DateTaken = new DateTime(2024, 8, 23, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3043),
                            DoctorID = 4,
                            LabName = "Luxor Lab",
                            Notes = "Head trauma",
                            PatientID = 4,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3052),
                            XrayImageURL = "http://example.com/xray4.png",
                            XrayType = "Skull"
                        },
                        new
                        {
                            XrayID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3063),
                            DateTaken = new DateTime(2024, 8, 24, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3057),
                            DoctorID = 5,
                            LabName = "Aswan Lab",
                            Notes = "Abdominal pain investigation",
                            PatientID = 5,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3066),
                            XrayImageURL = "http://example.com/xray5.png",
                            XrayType = "Abdomen"
                        },
                        new
                        {
                            XrayID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3077),
                            DateTaken = new DateTime(2024, 8, 25, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3071),
                            DoctorID = 6,
                            LabName = "Cairo Lab",
                            Notes = "Lung infection",
                            PatientID = 6,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3081),
                            XrayImageURL = "http://example.com/xray6.png",
                            XrayType = "Chest"
                        },
                        new
                        {
                            XrayID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3092),
                            DateTaken = new DateTime(2024, 8, 26, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3086),
                            DoctorID = 7,
                            LabName = "Alexandria Lab",
                            Notes = "Lower back pain",
                            PatientID = 7,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3096),
                            XrayImageURL = "http://example.com/xray7.png",
                            XrayType = "Spine"
                        },
                        new
                        {
                            XrayID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3106),
                            DateTaken = new DateTime(2024, 8, 27, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3101),
                            DoctorID = 8,
                            LabName = "Giza Lab",
                            Notes = "Post-surgery check",
                            PatientID = 8,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3110),
                            XrayImageURL = "http://example.com/xray8.png",
                            XrayType = "Knee"
                        },
                        new
                        {
                            XrayID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3121),
                            DateTaken = new DateTime(2024, 8, 28, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3115),
                            DoctorID = 9,
                            LabName = "Luxor Lab",
                            Notes = "Concussion follow-up",
                            PatientID = 9,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3124),
                            XrayImageURL = "http://example.com/xray9.png",
                            XrayType = "Skull"
                        },
                        new
                        {
                            XrayID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3135),
                            DateTaken = new DateTime(2024, 8, 29, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3130),
                            DoctorID = 10,
                            LabName = "Aswan Lab",
                            Notes = "Routine check",
                            PatientID = 10,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 572, DateTimeKind.Local).AddTicks(3139),
                            XrayImageURL = "http://example.com/xray10.png",
                            XrayType = "Abdomen"
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Prescription", b =>
                {
                    b.Property<int>("PrescriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("datetime2");

                    b.Property<int>("DoctorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("PatientID")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("PrescriptionID");

                    b.HasIndex("DoctorID");

                    b.HasIndex("PatientID");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            PrescriptionID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1386),
                            DateIssued = new DateTime(2024, 8, 25, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1344),
                            DoctorID = 1,
                            Notes = "Take with food",
                            PatientID = 1,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1391)
                        },
                        new
                        {
                            PrescriptionID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1404),
                            DateIssued = new DateTime(2024, 8, 26, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1399),
                            DoctorID = 2,
                            Notes = "Take before bed",
                            PatientID = 2,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1408)
                        },
                        new
                        {
                            PrescriptionID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1418),
                            DateIssued = new DateTime(2024, 8, 27, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1414),
                            DoctorID = 3,
                            Notes = "Take every 8 hours",
                            PatientID = 3,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1422)
                        },
                        new
                        {
                            PrescriptionID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1432),
                            DateIssued = new DateTime(2024, 8, 28, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1427),
                            DoctorID = 4,
                            Notes = "Take every morning",
                            PatientID = 4,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1436)
                        },
                        new
                        {
                            PrescriptionID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1446),
                            DateIssued = new DateTime(2024, 8, 29, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1441),
                            DoctorID = 5,
                            Notes = "Take every night",
                            PatientID = 5,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1450)
                        },
                        new
                        {
                            PrescriptionID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1459),
                            DateIssued = new DateTime(2024, 8, 30, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1455),
                            DoctorID = 6,
                            Notes = "Take before meals",
                            PatientID = 6,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1463)
                        },
                        new
                        {
                            PrescriptionID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1473),
                            DateIssued = new DateTime(2024, 8, 31, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1469),
                            DoctorID = 7,
                            Notes = "Take every 12 hours",
                            PatientID = 7,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1477)
                        },
                        new
                        {
                            PrescriptionID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1487),
                            DateIssued = new DateTime(2024, 9, 1, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1483),
                            DoctorID = 8,
                            Notes = "Take with water",
                            PatientID = 8,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1491)
                        },
                        new
                        {
                            PrescriptionID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1501),
                            DateIssued = new DateTime(2024, 9, 2, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1497),
                            DoctorID = 9,
                            Notes = "Take on an empty stomach",
                            PatientID = 9,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1505)
                        },
                        new
                        {
                            PrescriptionID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1515),
                            DateIssued = new DateTime(2024, 9, 3, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1511),
                            DoctorID = 10,
                            Notes = "Take before sleeping",
                            PatientID = 10,
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 568, DateTimeKind.Local).AddTicks(1519)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.PrescriptionMedication", b =>
                {
                    b.Property<int>("PrescriptionMedicationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrescriptionMedicationID"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Dosage")
                        .HasColumnType("int");

                    b.Property<string>("DosageUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("MedicationID")
                        .HasColumnType("int");

                    b.Property<int>("PrescriptionID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("PrescriptionMedicationID");

                    b.HasIndex("MedicationID");

                    b.HasIndex("PrescriptionID");

                    b.ToTable("PrescriptionMedications");

                    b.HasData(
                        new
                        {
                            PrescriptionMedicationID = 1,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9151),
                            Dosage = 500,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 14, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9141),
                            Frequency = "Twice a day",
                            Instructions = "Take with food",
                            MedicationID = 1,
                            PrescriptionID = 1,
                            StartDate = new DateTime(2024, 8, 25, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9100),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9155)
                        },
                        new
                        {
                            PrescriptionMedicationID = 2,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9173),
                            Dosage = 250,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 13, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9168),
                            Frequency = "Once a day",
                            Instructions = "Take before bed",
                            MedicationID = 2,
                            PrescriptionID = 2,
                            StartDate = new DateTime(2024, 8, 26, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9164),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9177)
                        },
                        new
                        {
                            PrescriptionMedicationID = 3,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9193),
                            Dosage = 100,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 12, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9188),
                            Frequency = "Every 8 hours",
                            Instructions = "Take every 8 hours",
                            MedicationID = 3,
                            PrescriptionID = 3,
                            StartDate = new DateTime(2024, 8, 27, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9184),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9197)
                        },
                        new
                        {
                            PrescriptionMedicationID = 4,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9212),
                            Dosage = 200,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 11, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9207),
                            Frequency = "Every morning",
                            Instructions = "Take every morning",
                            MedicationID = 4,
                            PrescriptionID = 4,
                            StartDate = new DateTime(2024, 8, 28, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9203),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9216)
                        },
                        new
                        {
                            PrescriptionMedicationID = 5,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9231),
                            Dosage = 150,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 10, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9226),
                            Frequency = "Every night",
                            Instructions = "Take every night",
                            MedicationID = 5,
                            PrescriptionID = 5,
                            StartDate = new DateTime(2024, 8, 29, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9222),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9234)
                        },
                        new
                        {
                            PrescriptionMedicationID = 6,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9249),
                            Dosage = 500,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 9, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9245),
                            Frequency = "Before meals",
                            Instructions = "Take before meals",
                            MedicationID = 6,
                            PrescriptionID = 6,
                            StartDate = new DateTime(2024, 8, 30, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9240),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9253)
                        },
                        new
                        {
                            PrescriptionMedicationID = 7,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9268),
                            Dosage = 100,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 8, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9264),
                            Frequency = "Every 12 hours",
                            Instructions = "Take every 12 hours",
                            MedicationID = 7,
                            PrescriptionID = 7,
                            StartDate = new DateTime(2024, 8, 31, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9259),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9272)
                        },
                        new
                        {
                            PrescriptionMedicationID = 8,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9287),
                            Dosage = 75,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 7, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9283),
                            Frequency = "With water",
                            Instructions = "Take with water",
                            MedicationID = 8,
                            PrescriptionID = 8,
                            StartDate = new DateTime(2024, 9, 1, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9278),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9291)
                        },
                        new
                        {
                            PrescriptionMedicationID = 9,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9306),
                            Dosage = 50,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 6, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9301),
                            Frequency = "On an empty stomach",
                            Instructions = "Take on an empty stomach",
                            MedicationID = 9,
                            PrescriptionID = 9,
                            StartDate = new DateTime(2024, 9, 2, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9297),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9310)
                        },
                        new
                        {
                            PrescriptionMedicationID = 10,
                            CreatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9325),
                            Dosage = 300,
                            DosageUnit = "mg",
                            EndDate = new DateTime(2024, 9, 5, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9320),
                            Frequency = "Before sleeping",
                            Instructions = "Take before sleeping",
                            MedicationID = 10,
                            PrescriptionID = 10,
                            StartDate = new DateTime(2024, 9, 3, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9316),
                            UpdatedTime = new DateTime(2024, 9, 4, 15, 28, 18, 569, DateTimeKind.Local).AddTicks(9329)
                        });
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Doctor", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Clinic", "Clinic")
                        .WithMany("Doctors")
                        .HasForeignKey("ClinicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.MedicalHistory", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Doctor", "Doctor")
                        .WithMany("MedicalHistories")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoshettaProAPI.Data.Entities.Patient", "Patient")
                        .WithMany("MedicalHistories")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Patient", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Contact", "EmergencyContact")
                        .WithMany("EmergencyPatients")
                        .HasForeignKey("EmergencyContactID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("EmergencyContact");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.PatientXray", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Doctor", "Doctor")
                        .WithMany("PatientXrays")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoshettaProAPI.Data.Entities.Patient", "Patient")
                        .WithMany("PatientXrays")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Prescription", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoshettaProAPI.Data.Entities.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.PrescriptionMedication", b =>
                {
                    b.HasOne("RoshettaProAPI.Data.Entities.Medication", "Medication")
                        .WithMany("PrescriptionMedications")
                        .HasForeignKey("MedicationID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("RoshettaProAPI.Data.Entities.Prescription", "Prescription")
                        .WithMany("PrescriptionMedications")
                        .HasForeignKey("PrescriptionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Medication");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Clinic", b =>
                {
                    b.Navigation("Doctors");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Contact", b =>
                {
                    b.Navigation("EmergencyPatients");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Doctor", b =>
                {
                    b.Navigation("MedicalHistories");

                    b.Navigation("PatientXrays");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Medication", b =>
                {
                    b.Navigation("PrescriptionMedications");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Patient", b =>
                {
                    b.Navigation("MedicalHistories");

                    b.Navigation("PatientXrays");

                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("RoshettaProAPI.Data.Entities.Prescription", b =>
                {
                    b.Navigation("PrescriptionMedications");
                });
#pragma warning restore 612, 618
        }
    }
}
